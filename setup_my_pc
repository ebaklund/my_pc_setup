#!/usr/bin/env -S bash

SRC_DIR="$(cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd)"
ARGS="$@"

# HELPERS

NO_COLOR="\033[0m"
RED_COLOR="\033[0;31m"
GREEN_COLOR="\033[0;32m"
YELLOW_COLOR="\033[0;33m"
BLUE_COLOR="\033[0;34m"

echo_red () {
    echo -e "${RED_COLOR}${1}${NO_COLOR}"
}

echo_green () {
    echo -e "${GREEN_COLOR}${1}${NO_COLOR}"
}

echo_blue () {
    echo -e "${BLUE_COLOR}${1}${NO_COLOR}"
}

echo_yellow () {
    echo -e "${YELLOW_COLOR}${1}${NO_COLOR}"
}

ensure_installed () {
    if ! $(which $1 > /dev/null); then
        echo_yellow "Installing $1 .. "
        sudo apt-get install -y $1
    else
        echo_green "$1 already installed."
    fi
}

ensure_vim_code_dark_theme () {
    local THEMES_DIR="${HOME}/.vim/pack/themes/start"

    if [[ ! -d "${THEMES_DIR}" ]]; then
        echo_yellow "Creating vim themes dir .. "
        mkdir -p "${THEMES_DIR}"
    else
        echo_green "Vim themes dir already created."
    fi 

    if [[ ! -d "${THEMES_DIR}/vim-code-dark" ]]; then
        echo_yellow "Installing vim-code-dark .. "
        cd "${THEMES_DIR}"
        git clone https://github.com/tomasiser/vim-code-dark
        rm -rf ./vim-code-daerk/.git
        cd -
    else
        echo_green "vim-code-dark already installed."
    fi
}

ensure_elvish_installed () {
    if ! $(which elvish > /dev/null); then
	local TMPDIR="$(mktemp -d)"
        local FILE="elvish-v0.19.2"

        echo_yellow "Installing elvish .. "
        cd "${TMPDIR}"

	wget "https://dl.elv.sh/linux-amd64/${FILE}.tar.gz"
        tar xvf "${FILE}.tar.gz"
        chmod +x "${FILE}"
        sudo cp "${FILE}" "/usr/local/bin/elvish"

        cd -
        rm -rf "${TMPDIR}"
    else
        echo_green "elvish already installed."
    fi
}

ensure_gcm_installed () {
    if ! $(git config --global credential.helper > /dev/null); then
	local TMPDIR="$(mktemp -d)"
        local VER=2.4.1
        local DEB_FILE="gcm-linux_amd64.${VER}.deb"
        local URL="https://github.com/git-ecosystem/git-credential-manager/releases/download/v${VER}/${DEB_FILE}"

        echo_yellow "Installing gcm .. "
        cd "${TMPDIR}"

	wget "${URL}"
	sudo dpkg -i "${DEB_FILE}"
        git-credential-manager configure

        cd -
        rm -rf "${TMPDIR}"
    else
        echo_green "gcm already installed."
    fi

    if ! grep GCM_CREDENTIAL_STORE ~/.profile > /dev/null; then
        echo_yellow "Cunfiguring gcm store .. "
        cp ~/.profile ~/.profile.$(date +"%Y%m%d-%H%M")
        echo "" >> ~/.profile
        echo "# Configure store for Git Credential Manager" >> ~/.profile
        echo "export GCM_CREDENTIAL_STORE=cache" >> ~/.profile
        echo_yellow "New loging required for GCM configuration to take effect!"
    else
        echo_green "gcm store lready configured."
    fi
}

# MAIN

ensure_installed wget
ensure_installed vim
ensure_vim_code_dark_theme
ensure_installed git
ensure_gcm_installed
ensure_elvish_installed
ensure_installed docker.io
sudo docker pull saltstack/salt

